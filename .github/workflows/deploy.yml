name: Deploy-to-Production

on:
  push:
    branches:
      - master  

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build Angular app
        run: ng build --configuration production --base-href=/hottakes/

      - name: Install cloudflared
        run: |
          cd /tmp
          wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared-linux-amd64.deb

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "StrictHostKeyChecking no" >> ~/.ssh/config
          echo "UserKnownHostsFile /dev/null" >> ~/.ssh/config

      - name: Configure SSH for cloudflared
        env:
          VPS_HOSTNAME: ${{ secrets.VPS_HOSTNAME }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          VPS_USER: ${{ secrets.VPS_USER }}
        run: |
          echo "Host $VPS_HOSTNAME" >> ~/.ssh/config
          echo "  Port $SSH_PORT" >> ~/.ssh/config
          echo "  ProxyCommand cloudflared access ssh --hostname %h" >> ~/.ssh/config
          echo "  User $VPS_USER" >> ~/.ssh/config
          echo "  IdentityFile ~/.ssh/id_rsa" >> ~/.ssh/config

      - name: Create project directory
        env:
          VPS_HOSTNAME: ${{ secrets.VPS_HOSTNAME }}
          VPS_USER: ${{ secrets.VPS_USER }}
          PROJECT_PATH: ${{ secrets.PROJECT_PATH }}
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
        run: |
          ssh $VPS_USER@$VPS_HOSTNAME "mkdir -p $PROJECT_PATH/$PROJECT_NAME"

      - name: Deploy built files via rsync
        env:
          VPS_HOSTNAME: ${{ secrets.VPS_HOSTNAME }}
          VPS_USER: ${{ secrets.VPS_USER }}
          PROJECT_PATH: ${{ secrets.PROJECT_PATH }}
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
        run: |
          rsync -avz --delete ./dist/hot-takes/ $VPS_USER@$VPS_HOSTNAME:$PROJECT_PATH/$PROJECT_NAME/

      - name: Verify deployment
        env:
          VPS_HOSTNAME: ${{ secrets.VPS_HOSTNAME }}
          VPS_USER: ${{ secrets.VPS_USER }}
          PROJECT_PATH: ${{ secrets.PROJECT_PATH }}
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
        run: |
          ssh $VPS_USER@$VPS_HOSTNAME "ls -la $PROJECT_PATH/$PROJECT_NAME && echo 'Deployment successful!'"
